mvc모델 이해: 모델 뷰 컨트롤러. 
-비유- 조모임에 비유해보자
조모임

-조장-컨트롤러:요청을 관리해줌.요청분석, 제공한 데이터 가공 모델에 전달, 모델이 보내준 데이터 가공해 뷰로 전달.

cf.presenter


-모델:데이터관리. 


-발표자-뷰:보여주고,요청에 대한 결과를 최종적으로 보여줌,html등,자료수집.입력된 것을 모델에 보여줌.
독립적이여야 함.

  =>역할분담


app-뷰라고 생각하세여.


개발에서의 디자인 -architect


??
ux설계?


1.저장된 정보를 모두 알아낸다.
-해야될 내용, 했는가, 해야할 일의 수
//-총 해야할 일들(list)

2.필요한 모델(갯수부터)
-각 할일의 정보를 담고 있는 TodoModel
-전체 할일의 정보를 담고 있는 AppModel


r:render
e:event driven function
m:model event driven (binding) function 


3.UX설계
 3.1.하나의 해야될 일에 대한 ux (TodoView)  //각기 한줄에 들어가는 것
 (r)가운데에 '해야될 내용'을 표시
 (r)왼쪽에 있는 v표 그리기 (on class를 통해 색깔 구불 green and grey)
 (e)왼쪽에 있는 v표를 통해 '했는가'를 toggle
 (e)hover시 x표 표시(x표에 hover하면 커지는 effect:추가구현)
 (e)x표 클릭시 제거 (모델 파괴, view remove)
 (e)'해야될 내용'을 더블클릭하면 수정모드 진입
 (e)수정 모드에서 blur 되었을 때 & enter key up ->save(set)
->사용자에 의해 변경

 (m)model에 change가 일어났을 때 view update
->모델이 변경되 표시된 내용 변경

 3.2 전체 app(App view)이 수행해줘야되는 일 - TodoView가 할 수 없는 일
 (r)새로운 할일을 입력받는 상자 그리기
 (r)전체 Todo의 '했는가' toggle 버튼 그리기
 (e)toggle 버튼 클릭시  전체 Todo의'했는가' toggle 
 (e)새로운 Todo의 생성
 (m)할일 갯수 표시 
 
 //(x)filter 기능		
 //(x)완료된 일 삭제하기


Model: TodoModel, AppModel
View : TodoView, AppView